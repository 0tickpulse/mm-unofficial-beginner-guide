"use strict";(self.webpackChunkmm_unofficial_beginner_guide=self.webpackChunkmm_unofficial_beginner_guide||[]).push([[297],{9613:(e,t,l)=>{l.d(t,{Zo:()=>m,kt:()=>p});var n=l(9496);function a(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function i(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function o(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?i(Object(l),!0).forEach((function(t){a(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):i(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function s(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)l=i[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)l=i[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var r=n.createContext({}),c=function(e){var t=n.useContext(r),l=t;return e&&(l="function"==typeof e?e(t):o(o({},t),e)),l},m=function(e){var t=c(e.components);return n.createElement(r.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var l=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=c(l),u=a,p=d["".concat(r,".").concat(u)]||d[u]||h[u]||i;return l?n.createElement(p,o(o({ref:t},m),{},{components:l})):n.createElement(p,o({ref:t},m))}));function p(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=l.length,o=new Array(i);o[0]=u;var s={};for(var r in t)hasOwnProperty.call(t,r)&&(s[r]=t[r]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=l[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,l)}u.displayName="MDXCreateElement"},6311:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=l(7366),a=(l(9496),l(9613));const i={sidebar_position:5},o="A Fireball Skill",s={unversionedId:"Getting Started/A Fireball Skill/index",id:"Getting Started/A Fireball Skill/index",title:"A Fireball Skill",description:"We're going to make a more complicated skill in addition to our first skill. This skill will cause the Demonic Mage to shoot a fireball at the player randomly.",source:"@site/docs/Getting Started/A Fireball Skill/index.mdx",sourceDirName:"Getting Started/A Fireball Skill",slug:"/Getting Started/A Fireball Skill/",permalink:"/mm-unofficial-beginner-guide/Getting Started/A Fireball Skill/",draft:!1,editUrl:"https://github.com/0tickpulse/mm-unofficial-beginner-guide/edit/main/docs/Getting Started/A Fireball Skill/index.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Your First Skill",permalink:"/mm-unofficial-beginner-guide/Getting Started/Your First Skill/"},next:{title:"Drop Tables",permalink:"/mm-unofficial-beginner-guide/Getting Started/Adding Drops to Our Mob/"}},r={},c=[{value:"Using the Skill System",id:"using-the-skill-system",level:2},{value:"Introducing the metaskill",id:"introducing-the-metaskill",level:2},{value:"Calling the metaskill",id:"calling-the-metaskill",level:2},{value:"Adding the Warning Message",id:"adding-the-warning-message",level:2},{value:"Adding the Sound Effect",id:"adding-the-sound-effect",level:2},{value:"Conditions",id:"conditions",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"Full Code",id:"full-code",level:3}],m=(d="FileTree",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var d;const h={toc:c},u="wrapper";function p(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,n.Z)({},h,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"a-fireball-skill"},"A Fireball Skill"),(0,a.kt)("p",null,"We're going to make a more complicated skill in addition to our first skill. This skill will cause the Demonic Mage to shoot a fireball at the player randomly."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Demonic Mage shooting a fireball",src:l(9979).Z,width:"1920",height:"1009"})),(0,a.kt)("h2",{id:"using-the-skill-system"},"Using the Skill System"),(0,a.kt)("p",null,"Remember the previous page where we discussed the various components of a skill? Recall that ",(0,a.kt)("strong",{parentName:"p"},"The Mechanic")," denotes what the skill does.\nAs such, we are going to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"shootfireball")," mechanic to make our skill."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"- shootfireball\n")),(0,a.kt)("p",null,"Next, we need to specify ",(0,a.kt)("strong",{parentName:"p"},"The Targeter"),", which is the way the skill chooses its targets. We're going to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"@target")," targeter, which will make the skill target whatever the mob is currently targeting."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"- shootfireball @target\n")),(0,a.kt)("p",null,"Finally, we need to specify ",(0,a.kt)("strong",{parentName:"p"},"The Trigger"),", which is the way the skill is activated. We're going to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"~onTimer")," trigger, which will make the skill activate whenever the mob attacks."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"- shootfireball @target ~onTimer\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"onTimer")," is a special trigger in that it takes in an argument. This argument is the amount of time in ticks between each activation of the skill. We're going to set this to 20, which is one second."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"- shootfireball @target ~onTimer:20\n")),(0,a.kt)("p",null,"Now, we have a skill that will shoot a fireball at the player every second."),(0,a.kt)("p",null,"So far, we used the knowledge we gained from the previous page to make this skill. However, this skill has many problems that make it unusable.\nFirstly, having a fireball shoot every second is unrealistic. We want the fireball to shoot randomly. To do that, we can give the skill a ",(0,a.kt)("strong",{parentName:"p"},"chance")," to activate."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"- shootfireball @target ~onTimer:20 0.5\n")),(0,a.kt)("p",null,"The last number is the chance for the skill to activate. In this case, the skill has a 0.5 (50%) chance to activate every second.\nHowever, it is still possible for the skill to activate multiple times in a row. To prevent this, we can add a ",(0,a.kt)("strong",{parentName:"p"},"cooldown")," to the skill.\nTo do so, we use a special field in our mechanic called ",(0,a.kt)("inlineCode",{parentName:"p"},"cooldown"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"- shootfireball{cooldown=10} @target ~onTimer:20 0.5\n")),(0,a.kt)("p",null,"This forces the skill to wait 10 seconds before activating again."),(0,a.kt)("p",null,"Nice! Now we have a skill that shoots a fireball at the player every 10 seconds with a 50% chance to activate every second.\nWe're going to make our skill more complex by:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Having a warning message 2 seconds before the fireball is shot"),(0,a.kt)("li",{parentName:"ul"},"Playing a sound when the fireball is shot, increasing realism")),(0,a.kt)("p",null,"As you can see, our skill can no longer just use a single mechanic. We need to use multiple mechanics, but how do we do that?"),(0,a.kt)("h2",{id:"introducing-the-metaskill"},"Introducing the metaskill"),(0,a.kt)("p",null,'A metaskill is a list of skills that are activated together; it essentially "groups" skills together.\nTo make a metaskill, we will go back to our files. Notice that we have a ',(0,a.kt)("inlineCode",{parentName:"p"},"Skills")," folder under our ",(0,a.kt)("inlineCode",{parentName:"p"},"plugins/MythicMobs")," folder:"),(0,a.kt)(m,{paths:["config.yml","Skills/ExampleSkills.yml","Mobs/ExampleMobs.yml","Mobs/DemonicMage.yml","..."],title:(0,a.kt)("h3",null,"MythicMobs folder"),mdxType:"FileTree"}),(0,a.kt)("p",null,"We will make a new file under the Skills folder called ",(0,a.kt)("inlineCode",{parentName:"p"},"DemonicMageSkills.yml"),". This file will contain our metaskill:"),(0,a.kt)(m,{paths:["config.yml","defaultOpen:Skills/ExampleSkills.yml","defaultOpen:Skills/hl-add:DemonicMageSkills.yml","Mobs/ExampleMobs.yml","Mobs/DemonicMage.yml","..."],title:(0,a.kt)("h3",null,"MythicMobs folder"),mdxType:"FileTree"}),(0,a.kt)("p",null,"Now, we can add our metaskill to the file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"DemonicMageFireball:\n  Skills:\n  - shootfireball @target\n")),(0,a.kt)("p",null,"As you can see, a metaskill also follows YAML syntax. We specify the skills that will be run in the metaskill under the ",(0,a.kt)("inlineCode",{parentName:"p"},"Skills")," field."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Notice that we removed the trigger, the chance, and the cooldown. We'll add them back later.")),(0,a.kt)("h2",{id:"calling-the-metaskill"},"Calling the metaskill"),(0,a.kt)("p",null,"Now that we have our metaskill, we need to call it in our mob. We can do so using a special mechanic called ",(0,a.kt)("inlineCode",{parentName:"p"},"skill"),", which takes in the name of the metaskill:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"- skill{skill=DemonicMageFireball}\n")),(0,a.kt)("p",null,"Adding it to our mob, we get:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},'DemonicMage:\n  Type: SKELETON\n  Display: "&4\u2620 &7Demonic Mage &4\u2620"\n  Health: 100\n  Damage: 10\n  Options:\n    MovementSpeed: 0.3\n    PreventOtherDrops: true\n    PreventSunburn: true\n    KnockbackResistance: 1\n  Equipment:\n  - BLAZE_ROD HAND\n  - LEATHER_HELMET HEAD\n  - LEATHER_CHESTPLATE CHEST\n  - LEATHER_LEGGINGS LEGS\n  - LEATHER_BOOTS FEET\n  Skills:\n  - effect:particles{p=flame;hS=0.25;vS=0.5;amount=10} @selfLocation{yoffset=1} ~onTimer:5\n  # highlight-start\n  - skill{skill=DemonicMageFireball}\n  # highlight-end\n')),(0,a.kt)("p",null,"In short, the ",(0,a.kt)("inlineCode",{parentName:"p"},"skill")," mechanic is like a normal mechanic, except it executes an entire metaskill."),(0,a.kt)("p",null,"Now, remember how we removed the trigger, the chance, and the cooldown from our metaskill?\nWe will add them back, but this time, we will add them to our mob's skill instead of the ",(0,a.kt)("inlineCode",{parentName:"p"},"shootfireball")," skill.\nBy doing so, we're applying them to the entire metaskill instead of just the fireball."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"- skill{skill=DemonicMageFireball} ~onTimer:20 0.5\n")),(0,a.kt)("p",null,"Nice! We have put our fireball into its own metaskill and called it in our mob. Now, we can add the warning message and the sound."),(0,a.kt)("h2",{id:"adding-the-warning-message"},"Adding the Warning Message"),(0,a.kt)("p",null,"To add the warning message, we will use the ",(0,a.kt)("inlineCode",{parentName:"p"},"message")," mechanic. This mechanic sends a message to the target."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"- message{m=&cThe Demonic Mage is charging up a fireball!} @PlayersInRadius{r=30}\n")),(0,a.kt)("p",null,"Notice that we used the ",(0,a.kt)("inlineCode",{parentName:"p"},"PlayersInRadius")," targeter. This targeter targets all players within a certain radius of the mob."),(0,a.kt)("p",null,"Now, we can add the message to our metaskill:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"DemonicMageFireball:\n  Skills:\n  - message{m=&cThe Demonic Mage is charging up a fireball!} @PlayersInRadius{r=30}\n  - shootfireball @target\n")),(0,a.kt)("p",null,"However, remember that we want the fireball to be shot 2 seconds after the message.\nWe can achieve this using another mechanic called ",(0,a.kt)("inlineCode",{parentName:"p"},"delay"),".\nAll ",(0,a.kt)("inlineCode",{parentName:"p"},"delay")," does is cause the skill to wait a certain amount of ticks.\n",(0,a.kt)("inlineCode",{parentName:"p"},"delay")," is used so commonly that the syntax is kept very simple - simply add the number of ticks after the ",(0,a.kt)("inlineCode",{parentName:"p"},"delay")," word.\nFor example, ",(0,a.kt)("inlineCode",{parentName:"p"},"delay 20")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"delay 40"),". Here's what our skill looks like with the delay:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"DemonicMageFireball:\n  Skills:\n  - message{m=&cThe Demonic Mage is charging up a fireball!} @PlayersInRadius{r=30}\n  - delay 40\n  - shootfireball @target\n")),(0,a.kt)("h2",{id:"adding-the-sound-effect"},"Adding the Sound Effect"),(0,a.kt)("p",null,"To add sounds, we use the ",(0,a.kt)("inlineCode",{parentName:"p"},"effect:sound")," mechanic, which simply plays a sound to the target.\nIt takes in a ",(0,a.kt)("inlineCode",{parentName:"p"},"s")," field, which is the ID of the sound.\nYou can get this by going into Minecraft, typing ",(0,a.kt)("inlineCode",{parentName:"p"},"/playsound")," and looking at all the tab completions."),(0,a.kt)("p",null,"In this case, we will use the ",(0,a.kt)("inlineCode",{parentName:"p"},"entity.ghast.shoot")," sound.\nAdding this to our skill, we get this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"DemonicMageFireball:\n  Skills:\n  - message{m=&cThe Demonic Mage is charging up a fireball!} @PlayersInRadius{r=30}\n  - delay 40\n  - effect:sound{s=entity.ghast.shoot} @selfLocation\n  - shootfireball{v=1.5;yield=1.5} @target\n")),(0,a.kt)("p",null,"By using the ",(0,a.kt)("inlineCode",{parentName:"p"},"@selfLocation")," targeter, we make the sound play at the mob's location, so anyone nearby can hear it."),(0,a.kt)("h2",{id:"conditions"},"Conditions"),(0,a.kt)("p",null,"We're almost there! There is one flaw with our skill: it will run regardless of whether it is in combat or not.\nIf it isn't in combat, it will still send the warning message, and play the sound, but it will not shoot the fireball because it doesn't have a target.\n",(0,a.kt)("strong",{parentName:"p"},"We don't want that.")),(0,a.kt)("p",null,"To fix this, we can use a new section in our metaskill called ",(0,a.kt)("inlineCode",{parentName:"p"},"Conditions"),".\nIt contains a list of conditions that must be met for the metaskill to run."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"DemonicMageFireball:\n  Conditions:\n  Skills:\n  - message{m=&cThe Demonic Mage is charging up a fireball!} @PlayersInRadius{r=30}\n  - delay 40\n  - effect:sound{s=entity.ghast.shoot} @selfLocation\n  - shootfireball{v=1.5;yield=1.5} @target\n")),(0,a.kt)("p",null,"In this case, we want the metaskill to run only if the mob is in combat.\nTo do so, we use the ",(0,a.kt)("inlineCode",{parentName:"p"},"incombat")," condition."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"DemonicMageFireball:\n  Conditions:\n  - incombat\n  Skills:\n  - message{m=&cThe Demonic Mage is charging up a fireball!} @PlayersInRadius{r=30}\n  - delay 40\n  - effect:sound{s=entity.ghast.shoot} @selfLocation\n  - shootfireball{v=1.5;yield=1.5} @target\n")),(0,a.kt)("p",null,"Now, the metaskill will only run if the mob is in combat."),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"We have successfully made our mob shoot a fireball at the player randomly.\nThis fireball is accompanied by a warning message and a sound effect.\nWe also made sure that the skill only runs if the mob is in combat."),(0,a.kt)("p",null,"This was a long and heavy page, so feel free to go through it a few times if you need to.\nBy having a thorough understanding of metaskills, you unlock a whole new level of complexity that lets you make advanced and intricate mechanics for our mobs."),(0,a.kt)("h3",{id:"full-code"},"Full Code"),(0,a.kt)("p",null,"Here is the full code for our mob:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="/plugins/MythicMobs/Mobs/DemonicMage.yml"',title:'"/plugins/MythicMobs/Mobs/DemonicMage.yml"'},'DemonicMage:\n  Type: SKELETON\n  Display: "&4\u2620 &7Demonic Mage &4\u2620"\n  Health: 100\n  Damage: 10\n  Options:\n    MovementSpeed: 0.3\n    PreventOtherDrops: true\n    PreventSunburn: true\n    KnockbackResistance: 1\n  Equipment:\n  - BLAZE_ROD HAND\n  - LEATHER_HELMET HEAD\n  - LEATHER_CHESTPLATE CHEST\n  - LEATHER_LEGGINGS LEGS\n  - LEATHER_BOOTS FEET\n  Skills:\n  - effect:particles{p=flame;hS=0.25;vS=0.5;amount=10} @selfLocation{yoffset=1} ~onTimer:5\n  - skill{skill=DemonicMageFireball} ~onTimer:20 0.5\n')),(0,a.kt)("p",null,"And our skill:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="/plugins/MythicMobs/Skills/DemonicMageSkills.yml"',title:'"/plugins/MythicMobs/Skills/DemonicMageSkills.yml"'},"DemonicMageFireball:\n  Conditions:\n  - incombat\n  Skills:\n  - message{m=&cThe Demonic Mage is charging up a fireball!} @PlayersInRadius{r=30}\n  - delay 40\n  - effect:sound{s=entity.ghast.shoot} @selfLocation\n  - shootfireball{v=1.5;yield=1.5} @target\n")))}p.isMDXComponent=!0},9979:(e,t,l)=>{l.d(t,{Z:()=>n});const n=l.p+"assets/images/demonic-mage-fireball-f628a1d19924bdd5331983a203164c81.png"}}]);