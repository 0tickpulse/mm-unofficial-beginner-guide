"use strict";(self.webpackChunkmm_unofficial_beginner_guide=self.webpackChunkmm_unofficial_beginner_guide||[]).push([[217],{9613:(e,t,l)=>{l.d(t,{Zo:()=>p,kt:()=>u});var i=l(9496);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function o(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,i)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?o(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):o(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function a(e,t){if(null==e)return{};var l,i,n=function(e,t){if(null==e)return{};var l,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)l=o[i],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)l=o[i],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var c=i.createContext({}),s=function(e){var t=i.useContext(c),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},p=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},k="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var l=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),k=s(l),m=n,u=k["".concat(c,".").concat(m)]||k[m]||h[m]||o;return l?i.createElement(u,r(r({ref:t},p),{},{components:l})):i.createElement(u,r({ref:t},p))}));function u(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=l.length,r=new Array(o);r[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[k]="string"==typeof e?e:n,r[1]=a;for(var s=2;s<o;s++)r[s]=l[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,l)}m.displayName="MDXCreateElement"},3567:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>s});var i=l(7366),n=(l(9496),l(9613));const o={},r="The Projectile",a={unversionedId:"Mastering Skills/The Projectile",id:"Mastering Skills/The Projectile",title:"The Projectile",description:"Mythic has a useful mechanic called projectile. This allows full control over projectiles in skills, allowing you to create fireballs, beams, waves, and more!",source:"@site/docs/Mastering Skills/The Projectile.mdx",sourceDirName:"Mastering Skills",slug:"/Mastering Skills/The Projectile",permalink:"/mm-unofficial-beginner-guide/Mastering Skills/The Projectile",draft:!1,editUrl:"https://github.com/0tickpulse/mm-unofficial-beginner-guide/edit/main/docs/Mastering Skills/The Projectile.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mastering Skills",permalink:"/mm-unofficial-beginner-guide/category/mastering-skills"}},c={},s=[{value:"How projectiles work",id:"how-projectiles-work",level:2},{value:"Creating a projectile",id:"creating-a-projectile",level:2},{value:"onStartSkill, onTick, onHit, onEndSkill, and more nonsense",id:"onstartskill-ontick-onhit-onendskill-and-more-nonsense",level:2},{value:"Hit this and that",id:"hit-this-and-that",level:2},{value:"Movement: velocity and gravity",id:"movement-velocity-and-gravity",level:2}],p={toc:s},k="wrapper";function h(e){let{components:t,...l}=e;return(0,n.kt)(k,(0,i.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"the-projectile"},"The Projectile"),(0,n.kt)("p",null,"Mythic has a useful mechanic called ",(0,n.kt)("inlineCode",{parentName:"p"},"projectile"),". This allows full control over projectiles in skills, allowing you to create fireballs, beams, waves, and more!\nHowever, this skill is extremely difficult to master and requires vast knowledge of Mythic's mechanics. This guide will teach you how to use the ",(0,n.kt)("inlineCode",{parentName:"p"},"projectile")," mechanic."),(0,n.kt)("h2",{id:"how-projectiles-work"},"How projectiles work"),(0,n.kt)("p",null,"Mythic projectiles are simple in concept: they are simply points in space that move.\nBy itself, the projectile does nothing, but the user can define behavior for the projectile when it spawns, when it ticks, when it hits something, and when it ends. For instance, a fireball projectile can play a particle effect when it ticks, and deal damage when it hits something."),(0,n.kt)("p",null,"Confusing? Let's make a projectile. The base projectile is the ",(0,n.kt)("inlineCode",{parentName:"p"},"projectile")," mechanic."),(0,n.kt)("h2",{id:"creating-a-projectile"},"Creating a projectile"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="/plugins/MythicMobs/Mobs/ProjectileCaster.yml"',title:'"/plugins/MythicMobs/Mobs/ProjectileCaster.yml"'},'ProjectileCaster:\n  Type: ZOMBIE\n  Health: 100\n  Display: "I cast projectiles"\n  Skills:\n  - skill{skill=CoolProjectileSkill} ~onTimer:100\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="/plugins/MythicMobs/Skills/CoolProjectileSkill.yml"',title:'"/plugins/MythicMobs/Skills/CoolProjectileSkill.yml"'},"CoolProjectileSkill:\n  Skills:\n  - projectile @Target\n")),(0,n.kt)("p",null,"This is the bare minimum. It fires a projectile at the mob's target. However, if you spawn the mob now, the projectile will do nothing. We will need to add things to the projectile."),(0,n.kt)("h2",{id:"onstartskill-ontick-onhit-onendskill-and-more-nonsense"},"onStartSkill, onTick, onHit, onEndSkill, and more nonsense"),(0,n.kt)("p",null,"Firstly, we will need to add a ",(0,n.kt)("inlineCode",{parentName:"p"},"onTick")," skill attribute. This sets what meta-skill will be run every time the projectile ticks."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml"},"CoolProjectileSkill:\n  Skills:\n  - projectile{onTick=CoolProjectileSkillTick} @Target\nCoolProjectileSkillTick:\n  Skills:\n  # Will do later\n")),(0,n.kt)("p",null,"In this example, the projectile will run ",(0,n.kt)("inlineCode",{parentName:"p"},"CoolProjectileSkillTick")," every time the projectile ticks. Usually, people put particle effects in the ",(0,n.kt)("inlineCode",{parentName:"p"},"onTick"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml"},"CoolProjectileSkill:\n  Skills:\n  - projectile{onTick=CoolProjectileSkillTick} @Target\nCoolProjectileSkillTick:\n  Skills:\n  - effect:particles{particle=flame}\n")),(0,n.kt)("p",null,"But... what targeter do we use? ",(0,n.kt)("inlineCode",{parentName:"p"},"@Self")," will play the particles on the mob, ",(0,n.kt)("inlineCode",{parentName:"p"},"@Target")," will play it on the mob's target, but we need the particle to play at the projectile's location..."),(0,n.kt)("p",null,"Introducing the ",(0,n.kt)("inlineCode",{parentName:"p"},"@Origin")," targeter. This is an incredibly complex targeter, so complex it requires a whole separate guide page on it. For now, just know that when this targeter is used in a meta-skill that is fired due to a projectile, it acts as a targeter that targets the projectile's location."),(0,n.kt)("p",null,"TL;DR ",(0,n.kt)("inlineCode",{parentName:"p"},"@Origin")," targets the projectile's location if it is run by a projectile."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml"},"CoolProjectileSkill:\n  Skills:\n  - projectile{onTick=CoolProjectileSkillTick} @Target\nCoolProjectileSkillTick:\n  Skills:\n  - effect:particles{particle=flame} @Origin\n")),(0,n.kt)("p",null,"Next, we add an ",(0,n.kt)("inlineCode",{parentName:"p"},"onHit")," skill attribute, which denotes what meta-skill is run when the projectile hits something."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml"},"CoolProjectileSkill:\n  Skills:\n  - projectile{onTick=CoolProjectileSkillTick;onHit=CoolProjectileSkillHit} @Target\nCoolProjectileSkillTick:\n  Skills:\n  - effect:particles{particle=flame} @Origin\nCoolProjectileSkillHit:\n  Skills:\n  - damage{amount=5}\n")),(0,n.kt)("p",null,"This makes the projectile deal ",(0,n.kt)("inlineCode",{parentName:"p"},"5")," damage to whatever the projectile hits."),(0,n.kt)("p",null,"You might be saying, this skill is missing a targeter! However, this is a special case: In an ",(0,n.kt)("inlineCode",{parentName:"p"},"onHit")," skill, the meta-skill automatically targets the hit entity. (Mythic magic)"),(0,n.kt)("h2",{id:"hit-this-and-that"},"Hit this and that"),(0,n.kt)("p",null,"There are a lot of other attributes for projectiles. Let's look at the attributes that denote who the projectile hits."),(0,n.kt)("p",null,"Let's say that we want the projectile to go through blocks. To do this, we add ",(0,n.kt)("inlineCode",{parentName:"p"},"stopAtBlock=false")," to the projectile."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml"},"CoolProjectileSkill:\n  Skills:\n  - projectile{onTick=CoolProjectileSkillTick;onHit=CoolProjectileSkillHit;stopAtBlock=false} @Target\nCoolProjectileSkillTick:\n  Skills:\n  - effect:particles{particle=flame} @Origin\nCoolProjectileSkillHit:\n  Skills:\n  - damage{amount=5}\n")),(0,n.kt)("p",null,"By default, projectiles only hit players, but we want the projectile to hit all entities. To do that, we add ",(0,n.kt)("inlineCode",{parentName:"p"},"hitNonPlayers=true")," to the projectile."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yml"},"CoolProjectileSkill:\n  Skills:\n  - projectile{onTick=CoolProjectileSkillTick;onHit=CoolProjectileSkillHit;stopAtBlock=false;hitNonPlayers=true} @Target\nCoolProjectileSkillTick:\n  Skills:\n  - effect:particles{particle=flame} @Origin\nCoolProjectileSkillHit:\n  Skills:\n  - damage{a=5}\n")),(0,n.kt)("h2",{id:"movement-velocity-and-gravity"},"Movement: velocity and gravity"),(0,n.kt)("p",null,"There are also attributes that change how fast the projectile moves. Firstly, there is a ",(0,n.kt)("inlineCode",{parentName:"p"},"velocity")," attribute that changes the velocity of the projectile."),(0,n.kt)("p",null,"The velocity formula is this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-math"},"\\textrm{Blocks per second} = \\cfrac{\\textrm{velocity attribute on projectile}}{10}\n")),(0,n.kt)("p",null,"For example, if you set the ",(0,n.kt)("inlineCode",{parentName:"p"},"velocity")," attribute as ",(0,n.kt)("inlineCode",{parentName:"p"},"50"),", it will move 5 blocks per second."))}h.isMDXComponent=!0}}]);